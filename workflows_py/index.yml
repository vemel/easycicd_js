name: GitHub Actions for Python projects
documentation: https://github.com/vemel/github_actions_js/blob/main/workflows_py/README.md
workflows:
  - name: on_push_check
    title: Run style checks and unit tests
    url: ./on_push_check.yml
    description: |
      - Starts on push to any branch
      - Installs package with `poetry`, `pipenv` or `requirements[-dev].txt`
      - Caches installed Python dependencies
      - Runs `flake8` if it is installed
      - Runs `pylint` if it is installed
      - Runs `mypy` if it is installed
      - Runs `pyright` if `pyrightconfig.json` file exists
      - Runs `pytest` if it is installed

  - name: on_pull_opened_or_edited
    title: Update Pull Request labels
    url: ./on_pull_opened_or_edited.yml
    description: |
      - Starts on Pull Request opened or edited event
      - Pull Request notes must be in [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) format
      - If Pull Request branch name is `release/*`, adds `release` label
      - If Pull Request notes has `Removed` section, adds `major` label
      - If Pull Request notes has `Added`, `Changed` or `Deprecated` sections, adds `minor` label
      - Otherwise adds `patch` label

  - name: on_pull_merged
    title: Update Release from Pull Request
    url: ./on_pull_merged.yml
    description: |
      - Starts on Pull Request merge for non-`release/*` branch
      - Creates or updates a Release draft for Pull Request base branch
      - Release draft notes are merged from existing notes and Pull Request notes
      - Each entry added from Pull Request notes contains a link to the Pull Request
      - Release draft suggested version is based on Release notes

  - name: on_release_published
    title: Create Release Pull Request
    url: ./on_release_published.yml
    secrets:
      - name: GPG_PRIVATE_KEY
        description: Key to sign commits https://docs.github.com/en/github/authenticating-to-github/generating-a-new-gpg-key
      - name: GPG_PRIVATE_KEY_PASSPHRASE
        description: Passphrase for GPG private key
    description: |
      - Starts on Release published
      - Release notes must be in [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) format
      - Creates a Release Pull Request from Release target branch with `release` label
      - If the release is not a prerelease, cleans up `Unreleased` section in `CHANGELOG.md`
      - Release Pull Request contains only version bump in `package.json` and updated `CHANGELOG.md`
      - Release Pull Request uses branch `release/<version>`
      - Signs commits if `GPG_PRIVATE_KEY` secret is set

  - name: on_release_pull_merged
    title: Publish to PyPI
    url: ./on_release_pull_merged.yml
    secrets:
      - name: PYPI_PASSWORD
        description: Password for `__token__` username for https://pypi.org/
    description: |
      - Runs only if `PYPI_PASSWORD` secret is set
      - Starts on Pull Request merge for `release/*` branch
      - Uses Pull Request branch for deployment, so released version contains only changes
        from base branch when Release had been published
      - Builds package if `build` script is available in `package.json`
      - Publishes new version to [PyPI](https://pypi.org/)

  - name: on_demand_create_release_draft
    title: Create Release draft
    url: ./on_demand_create_release_draft.yml
    description: |
      - Starts only manually
      - Can be used if you do not enforce Pull Request-based updates and commit directly to `target` branch
      - Creates or updates a release draft for `target` branch
      - Release notes are populated from `Unreleased` section of `CHANGELOG.md`
      - Sets suggested version as `name` and `tag` of the Release
