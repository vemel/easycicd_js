# This workflow provided by GitHub Actions Manager
# Documentation: https://github.com/vemel/github_actions_js/blob/main/nodejs_workflows/README.md
#
# - Starts on push to any branch
# - Uses `npm` cache to improve performance
# - Runs linting if `lint` script is available in `npm run`
# - Runs unit tests if `test` script is available in `npm run`
# - Runs `test-cov` script if it is available in `npm run`
# - Sends test coverage report to https://codecov.io/ if `CODECOV_TOKEN` secret is set
#
# Secrets:
#   CODECOV_TOKEN - Token for https://codecov.io/ coverage report

name: Run style checks and unit tests
"on":
  push: {}
  workflow_dispatch: {}
jobs:
  check:
    runs-on: ubuntu-latest
    env:
      LINT_SCRIPT: lint
      TEST_SCRIPT: test
      TEST_COVERAGE_SCRIPT: test-cov
    strategy:
      matrix:
        node-version:
          - 14
    steps:
      - name: Checkout current branch
        id: checkout
        uses: actions/checkout@v2
      - name: Get available scripts
        id: scripts
        uses: actions/github-script@v3
        with:
          script: |
            const { promisify } = require('util');
            const exec = promisify(require('child_process').exec);

            const output = (await exec('npm run')).stdout;
            const scripts = output.split(/\r?\n/)
              .filter(line => line.startsWith('  ') && !line.startsWith('   '))
              .map(line => line.trim());

            let result = undefined;
            if (scripts.includes(process.env.LINT_SCRIPT)) {
              core.setOutput('lint', process.env.LINT_SCRIPT);
              result = true;
            }
            if (scripts.includes(process.env.TEST_SCRIPT)) {
              core.setOutput('test', process.env.TEST_SCRIPT);
              result = true;
            }
            if (scripts.includes(process.env.TEST_COVERAGE_SCRIPT)) {
              core.setOutput('test-cov', process.env.TEST_COVERAGE_SCRIPT);
              result = true;
            }
            return result;
      - name: Cache npm downloads
        uses: actions/cache@v2
        id: cache
        if: steps.scripts.outputs.result
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-
      - name: Set up Node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
      - name: Install package
        id: install
        if: steps.scripts.outputs.result
        run: |
          npm install -g npm
          npm ci
      - name: Run linting
        id: lint
        if: steps.scripts.outputs.lint
        run: |
          echo "Running: npm run ${{ steps.scripts.outputs.lint }}"
          npm run ${{ steps.scripts.outputs.lint }}
      - name: Run tests
        id: test
        if: steps.scripts.outputs.test
        run: |
          echo "Running: npm run ${{ steps.scripts.outputs.test }}"
          npm run ${{ steps.scripts.outputs.test }}
      - name: Send test coverage report
        id: test-coverage
        if: steps.scripts.outputs.test
        env:
          RUN_SCRIPT: ${{ steps.scripts.outputs.test-cov }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          if [[ ! -z ${RUN_SCRIPT} ]]; then
            npm run ${RUN_SCRIPT}
          fi
          if [[ ! -z ${CODECOV_TOKEN} ]]; then
            bash <(curl -s https://codecov.io/bash)
          fi
