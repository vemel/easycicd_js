# This workflow provided by GitHubActions.js
# Documentation: https://github.com/vemel/github_actions_js
#
# --- How to modify this workflow and still get updates ---
# - Set 'github-actions-managed' to false on manual edit to prevent step overwrite on update
# - User-added steps survive update as well
# - Deleted steps are restored on update, so make them empty instead of removing
# - Do not change job name, it is important for updates
# - Comments in yaml are removed on update, sorry :(

name: Publish to NPM on Release Pull Request merged
"on":
  pull_request:
    types:
      - closed
  workflow_dispatch:
    inputs:
      number:
        description: Pull Request number
        required: true
jobs:
  publish-to-npm:
    if: secrets.NPM_TOKEN
    runs-on: ubuntu-latest
    steps:
      - name: Get Pull Request
        uses: actions/github-script@v3
        id: pull-request
        with:
          github-actions-managed: true
          script: |
            let pullRequest = null;
            if (context.inputs && context.inputs.number) {
              // find Pull Request by number fom input
              try {
                pullRequest = (await github.pulls.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: number,
                })).data;
              } catch(e) {
                core.error(`Cannot get Pull Request #${number}: ${e}`);
                return;
              }
            } else {
              // get Pull Request from event payload
              pullRequest = context.payload;
            }

            // Stop if Pull request is not merged
            if (!pullRequest.merged) {
              core.info(`Pull Request ${pullRequest.number} is not merged, skipping`);
              return;
            }

            // Stop if Pull Request branch name starts with `release`
            const branch = pullRequest.head.ref;
            if (!branch.startswith('release')) {
              core.info(`This is not a release branch ${branch}, skipping`);
              return;
            }

            core.setOutput('branch', branch);
            core.setOutput('base', pullRequest.base.ref);
            core.setOutput('number', pullRequest.number);
            core.setOutput('url', pullRequest.html_url);
            core.setOutput('body', pullRequest.body);
            core.setOutput('suffix', `[#${pullRequest.number}](${pullRequest.html_url})`);
            return true;
      - name: Checkout Pull Request base branch
        id: checkout
        if: steps.pull-request.outputs.result
        uses: actions/checkout@v2
        with:
          github-actions-managed: true
          ref: ${{ steps.pull-request.outputs.base }}
      - name: Setup Node.js 12
        uses: actions/setup-node@v2
        id: setup-node
        if: steps.pull-request.outputs.result
        with:
          github-actions-managed: true
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: Get available scripts
        id: scripts
        uses: actions/github-script@v3
        with:
          github-actions-managed: true
          script: |
            const { promisify } = require('util');
            const exec = promisify(require('child_process').exec);

            // Script to build package
            const buildScript = 'build';

            const output = (await exec('npm run')).stdout;
            const scripts = output.split(/\r?\n/)
              .filter(line => line.startsWith('  ') && !line.startsWith('   '))
              .map(line => line.trim());

            core.setOutput('build', scripts.includes(buildScript) ? buildScript : '');
            return true;
      - name: Install package
        id: install
        if: steps.pull-request.outputs.result
        run: |
          # github-actions-managed: true
          npm install
      - name: Build package
        id: build
        if: steps.pull-request.outputs.result && steps.scripts.outputs.build
        run: |
          # github-actions-managed: true
          echo "Running: npm run ${{ steps.scripts.outputs.build }}"
          npm run ${{ steps.scripts.outputs.build }}
      - name: Publish new version to NPM
        id: publish
        if: steps.pull-request.outputs.result
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # github-actions-managed: true
          npm publish --access public
